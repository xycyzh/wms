<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wolfcode.wms.mapper.EmployeeMapper">
    <resultMap id="BaseResultMap" type="cn.wolfcode.wms.domain.Employee">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="password" property="password"/>
        <result column="email" property="email"/>
        <result column="age" property="age"/>
        <result column="admin" property="admin"/>
        <association property="dept" javaType="cn.wolfcode.wms.domain.Department" columnPrefix="d_">
            <id column="id" property="id"/>
            <id column="name" property="name"/>
        </association>
        <collection property="roles" ofType="cn.wolfcode.wms.domain.Role" column="id"
                    select="cn.wolfcode.wms.mapper.RoleMapper.queryRoleByEmployeeId"/>
    </resultMap>
    <delete id="deleteByPrimaryKey">
        DELETE FROM employee
        WHERE id = #{id}
    </delete>
    <delete id="deleteEmployeeRoleRelation">
        DELETE FROM employee_role
        WHERE employee_id = #{employeeId}
    </delete>
    <delete id="batchDelete">
        DELETE FROM employee WHERE id IN
        <foreach collection="array" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>
    <delete id="batchDeleteEmployeeRoleRelation">
        DELETE FROM employee_role WHERE employee_role.employee_id IN
        <foreach collection="array" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO employee (name, password, email, age, admin, dept_id)
        VALUES (#{name}, #{password}, #{email}, #{age}, #{admin}, #{dept.id})
    </insert>
    <insert id="insertEmployeeRoleRelation">
        INSERT INTO employee_role (employee_id, role_id) VALUES (#{employeeId}, #{roleId});
    </insert>
    <update id="updateByPrimaryKey">
        UPDATE employee
        SET name    = #{name},
            email   = #{email},
            age     = #{age},
            admin   = #{admin},
            dept_id = #{dept.id}
        WHERE id = #{id}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        SELECT
            e.id,
            e.name,
            e.password,
            e.email,
            e.age,
            e.admin,
            e.dept_id,
            d.id   AS d_id,
            d.name AS d_name
        FROM employee e LEFT JOIN department d ON e.dept_id = d.id
        WHERE e.id = #{id}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        SELECT
            id,
            name,
            password,
            email,
            age,
            admin,
            dept_id
        FROM employee
    </select>
    <select id="queryForCount" resultType="int">
        SELECT count(e.id)
        FROM employee e LEFT JOIN department d ON e.dept_id = d.id<include refid="base_where"/>;
    </select>
    <select id="queryForList" resultMap="BaseResultMap">
        SELECT
        e.id,
        e.name,
        e.password,
        e.email,
        e.age,
        e.admin,
        e.dept_id,
        d.id AS d_id,
        d.name AS d_name
        FROM employee e LEFT JOIN department d ON e.dept_id = d.id
        <include refid="base_where"/>
        LIMIT #{startIndex}, #{pageSize};
    </select>
    <select id="queryUsername" resultType="employee">
        SELECT
            id,
            name,
            password,
            email,
            age,
            admin
        FROM employee
        WHERE name = #{name};
    </select>

    <sql id="base_where">
        <where>
            <if test="keyword!=null and keyword!=''">
                AND (e.name LIKE concat("%",#{keyword},"%") OR e.email LIKE concat("%",#{keyword},"%"))
            </if>
            <if test="deptId>0">
                AND e.dept_id = #{deptId}
            </if>
        </where>
    </sql>
</mapper>